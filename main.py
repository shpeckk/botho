
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils.callback_data import CallbackData
import asyncio

API_TOKEN = '7957692959:AAGYNF8vHZaHanfSIxjc-l3rtxBALhJ6PDE'
GROUP_CHAT_ID = -1002682478434

bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

order_cb = CallbackData("order", "action", "user_id")

class OrderHookah(StatesGroup):
    strength = State()
    addon = State()
    flavor = State()
    phone = State()
    comment = State()

class Review(StatesGroup):
    writing = State()

def cancel_keyboard():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")
    return kb

def main_menu_keyboard():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("–ó–∞–∫–∞–∑–∞—Ç—å –∫–∞–ª—å—è–Ω", "–ú–µ–Ω—é –∏ —Ü–µ–Ω—ã")
    kb.add("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
    return kb

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu_keyboard())

@dp.message_handler(lambda m: m.text == "üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main(message: types.Message):
    await start(message)

@dp.message_handler(lambda m: m.text == "–ú–µ–Ω—é –∏ —Ü–µ–Ω—ã")
async def send_menu(message: types.Message):
    with open("menu.jpg", "rb") as photo:
        await message.answer_photo(photo, caption="–ù–∞—à–µ –º–µ–Ω—é –∏ —Ü–µ–Ω—ã:")

@dp.message_handler(lambda m: m.text == "–ó–∞–∫–∞–∑–∞—Ç—å –∫–∞–ª—å—è–Ω")
async def order_start(message: types.Message):
    await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏: –ö–∞–ª—å—è–Ω –Ω–∞ —á–∞—à–µ ‚Äî 3000‚ÇΩ", reply_markup=cancel_keyboard())
    await message.answer("–û—Ü–µ–Ω–∏—Ç–µ –∫—Ä–µ–ø–æ—Å—Ç—å –æ—Ç 1 –¥–æ 10:")
    await OrderHookah.strength.set()

@dp.message_handler(state=OrderHookah.strength)
async def get_addon(message: types.Message, state: FSMContext):
    await state.update_data(strength=message.text)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add("–ú–æ–ª–æ–∫–æ (+200‚ÇΩ)", "–í–∏–Ω–æ (+400‚ÇΩ)", "–ê–±—Å–µ–Ω—Ç (+500‚ÇΩ)", "–ë–µ–∑ –¥–æ–±–∞–≤–æ–∫")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –¥–æ–±–∞–≤–∫—É:", reply_markup=keyboard)
    await OrderHookah.addon.set()

@dp.message_handler(state=OrderHookah.addon)
async def get_flavor(message: types.Message, state: FSMContext):
    addon_text = message.text
    addon_price = 0
    if "–ú–æ–ª–æ–∫–æ" in addon_text:
        addon_price = 200
    elif "–í–∏–Ω–æ" in addon_text:
        addon_price = 400
    elif "–ê–±—Å–µ–Ω—Ç" in addon_text:
        addon_price = 500

    await state.update_data(addon=addon_text, addon_price=addon_price)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∫—É—Å–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: –º—è—Ç–∞ + –∞—Ä–±—É–∑):", reply_markup=cancel_keyboard())
    await OrderHookah.flavor.set()

@dp.message_handler(state=OrderHookah.flavor)
async def get_phone(message: types.Message, state: FSMContext):
    await state.update_data(flavor=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ —á–µ—Ä–µ–∑ WhatsApp):", reply_markup=cancel_keyboard())
    await OrderHookah.phone.set()

@dp.message_handler(state=OrderHookah.phone)
async def ask_comment(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await message.answer("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ). –ï—Å–ª–∏ –Ω–µ—á–µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´-¬ª.", reply_markup=cancel_keyboard())
    await OrderHookah.comment.set()

@dp.message_handler(state=OrderHookah.comment)
async def finish_order(message: types.Message, state: FSMContext):
    comment = message.text if message.text.strip() != "-" else "–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"
    await state.update_data(comment=comment)
    data = await state.get_data()

    base_price = 3000
    total_price = base_price + data.get('addon_price', 0)
    username = f"@{message.from_user.username}" if message.from_user.username else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

    user_message = (
        f"–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!\n\n"
        f"–ß–∞—à–∞: {base_price}‚ÇΩ\n"
        f"–ö—Ä–µ–ø–æ—Å—Ç—å: {data['strength']}\n"
        f"–î–æ–±–∞–≤–∫–∞: {data['addon']} (+{data['addon_price']}‚ÇΩ)\n"
        f"–í–∫—É—Å—ã: {data['flavor']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data['comment']}\n"
        f"–ò—Ç–æ–≥–æ: {total_price}‚ÇΩ\n\n"
        f"–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã: –Ω–∞–ª–∏—á–Ω—ã–µ, –ø–µ—Ä–µ–≤–æ–¥–æ–º."
    )
    await message.answer(user_message, reply_markup=main_menu_keyboard())
    await state.finish()

    group_message = (
        f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –∫–∞–ª—å—è–Ω–∞:\n"
        f"–ì–æ—Å—Ç—å: {username}\n"
        f"–ß–∞—à–∞: 3000‚ÇΩ\n"
        f"–ö—Ä–µ–ø–æ—Å—Ç—å: {data['strength']}\n"
        f"–î–æ–±–∞–≤–∫–∞: {data['addon']} (+{data['addon_price']}‚ÇΩ)\n"
        f"–í–∫—É—Å—ã: {data['flavor']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data['comment']}\n"
        f"–ò—Ç–æ–≥–æ: {total_price}‚ÇΩ\n"
        f"–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã: –Ω–∞–ª–∏—á–Ω—ã–µ, –ø–µ—Ä–µ–≤–æ–¥–æ–º."
    )

    confirm_keyboard = types.InlineKeyboardMarkup()
    confirm_keyboard.add(
        types.InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=order_cb.new(action="confirm", user_id=message.from_user.id)),
        types.InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=order_cb.new(action="cancel", user_id=message.from_user.id)),
    )

    await bot.send_message(GROUP_CHAT_ID, group_message, reply_markup=confirm_keyboard)

    async def send_review_request(user_id):
        await asyncio.sleep(3600)
        try:
            await bot.send_message(user_id, "üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤? –ù–∞–∂–º–∏—Ç–µ ¬´–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤¬ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é üí¨")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞: {e}")

    asyncio.create_task(send_review_request(message.from_user.id))

@dp.callback_query_handler(order_cb.filter())
async def handle_order_action(callback: types.CallbackQuery, callback_data: dict):
    action = callback_data['action']
    user_id = int(callback_data['user_id'])

    if action == "confirm":
        await bot.send_message(user_id, "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω! –°–∫–æ—Ä–æ –∫ –≤–∞–º –ø–æ–¥–æ–π–¥—É—Ç.")
        await callback.message.edit_reply_markup()
        await callback.message.edit_text(callback.message.text + "\n\n–°—Ç–∞—Ç—É—Å: ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω")
        await callback.answer("–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω.")
    elif action == "cancel":
        await bot.send_message(user_id, "‚ùå –í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω—ë–Ω. –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π.")
        await callback.message.edit_reply_markup()
        await callback.message.edit_text(callback.message.text + "\n\n–°—Ç–∞—Ç—É—Å: ‚ùå –û—Ç–º–µ–Ω—ë–Ω")
        await callback.answer("–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω.")

@dp.message_handler(lambda m: m.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", state="*")
async def cancel_any_state(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=main_menu_keyboard())

@dp.message_handler(lambda m: m.text == "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
async def leave_review(message: types.Message):
    await message.answer("‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤. –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º –µ–≥–æ –≤ –∫–æ–º–∞–Ω–¥–Ω—ã–π —á–∞—Ç:", reply_markup=cancel_keyboard())
    await Review.writing.set()

@dp.message_handler(state=Review.writing)
async def handle_review_text(message: types.Message, state: FSMContext):
    username = f"@{message.from_user.username}" if message.from_user.username else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    text = f"üìù –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç {username}:\n\n{message.text}"
    await bot.send_message(GROUP_CHAT_ID, text)
    await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! üôè", reply_markup=main_menu_keyboard())
    await state.finish()

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
